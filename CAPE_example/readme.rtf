{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\fnil\fcharset0 Calibri;
\f3\fnil\fcharset0 Georgia;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red11\green85\blue25;\red0\green0\blue255;
}
\margl1440\margr1440\vieww11940\viewh7800\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 NON_NZO_Reifsnyder_pgm_CAPE_num.csv:
\b0  data for cape in R/qtl format. downloaded from QTL archive \cf2 (
\f1\fs28 \expnd0\expndtw0\kerning0
www.qtlarchive.org)
\f0\fs24 \cf0 \kerning1\expnd0\expndtw0 \
\

\b cape_example.R: 
\b0 code for running cape analysis with these data. You will need to change path names.\

\b cape.parameters.txt: 
\b0 parameter file for cape run\
\

\b code directories: 
\b0 I am including three zipped directories. One with cape code, one with cape addons, and another with some generally useful scripts. Unzip these and put them where you keep your code. The Alport_DO_cape.R wrapper will source all this code before running cape.\
\

\b CAPE parameters:\

\b0 The parameter file is currently set up for a test run. There are very few markers selected, and very few permutations done. When doing a real run, I usually use 
\b 1500 markers
\b0  and 
\b 1.5 million permutations.
\b0  This takes about 24 hours on cadillac when it is running on 
\b 20 cores
\b0 .\
\
You can set these parameters just by substituting the values in the parameter file.\
\
You can also set up your own parameter file by going to \
\pard\pardeftab720\partightenfactor0

\f2\fs30 \cf4 \ul \ulc4 http://carterdev:3838/capeDO_setup\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \ulnone The data from this study are already uploaded. \
\
This is a shiny app that helps set up parameters for a cape run. There are a few things in particular to pay attention to here:\
\

\b Traits and covariates:
\b0  make sure to select all traits and covariates you want to run. \
CAPE decomposes the phenotype matrix into eigentraits, and thus only animals with values across all selected traits will be run. There a note under the phenotypes to say how many animals will be run with the selected phenotypes.\
\

\b Plots: 
\b0 There are lots of plotting options that will show you different aspects of the selected traits. We try to pick traits that have correlations between 0.4 and 0.8. \
\

\b Eigentraits: 
\b0 One of the plots shows the trait contributions to the eigentraits. This is what you will look at to select how many eigentraits you want to use. Typically between 2 and 4 are good numbers depending on the number of traits selected. I usually leave off eigentraits that explain less than 10% of the variance in the traits.\
You can select the number of eigentraits you want with the counter. The default (and minimum number) is 2.\
\

\b Normalization and mean centering:
\b0  These are almost always a good idea, although they are not selected by default in this app. Select and deselect them to see differences in various plots. Make sure they are checked if you want to mean center and normalize the data:\
\

\b Other tabs\

\b0 Across the top of the plotting page, you will see other tabs for other CAPE settings. Most of these you can leave as the default values, but there are some to pay attention to.\
\

\b Single Locus Scan -> Reference Allele: 
\b0 We use one of the parental haplotypes as the reference allele. The default is A, but we usually use B in the DO, since B6 is frequently used as a reference in other experiments.\
\

\b Single Locus Scan -> Permutations: 
\b0 The default value is 100, but you do not need to run any permutations for CAPE. CAPE just selects the highest effect markers regardless of significance for the pairscan. Permutations here are only run if you want to look at single-locus significance. Otherwise, set to 0.\
\
Everything else can be left as is, and I'm happy to answer questions about any of this.\
\

\b Download parameter file:
\b0  When you are done setting everything as you want it, click "Download Parameter File." This will download a formatted parameter file that run.cape() reads in to run the analysis. \
\

\b Extra analyses:\

\b0 There are some additional analyses after the run.cape() argument that might be useful.\
The two 
\b network plotting
\b0  functions plot different views of the final network.\

\b write.data.for.shiny() 
\b0 writes out a data object that can be uploaded to \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f3 \cf0 carterdev.jax.org:/srv/shiny-server/capeDO_interactions/data for further viewing. After uploading the data, go to {\field{\*\fldinst{HYPERLINK "http://carterdev:3838/cape_interactions"}}{\fldrslt 
\f2\fs30 \cf4 \ul http://carterdev:3838/cape_interactions}}
\f2\fs30 \cf4 \ul  
\f3\fs24 \cf0 \ulnone to view the results\
\
The motif analysis will show you where there are motifs that 
\f0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
}